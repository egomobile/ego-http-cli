// This file was generated by ego-http-cli.
// Please remove this block of comments.
// Please setup the missing imports manually as it varies between project to project.

import { Controller, Describe, GET, IHttpRequest, IHttpResponse, It, POST, PUT, DELETE} from "@egomobile/http-server";

/**
 * Base path: {{.BasePath}}
 */
@Controller()
@Describe()
export default class {{.Name}} {
    @GET({
        "path": "/"
    })
    @It("should return {{"{{status}}"}} if submit no JWT", Symbol("no jwt"))
    @It("should return {{"{{status}}"}} if submit empty JWT value in Authorization header", Symbol("invalid jwt #1"))
    @It("should return {{"{{status}}"}} if submit invalid JWT value in Authorization header", Symbol("invalid jwt #2"))
    @It("should return {{"{{status}}"}} if submit valid JWT with unknown client", Symbol("unknown client"))
    @It(
        "should return status code 200 with a content type set to 'application/json' if a valid JWT is provided in Authorization header",
        Symbol("test #1")
    )
    public get(request: IHttpRequest, response: IHttpResponse) {
        // not-implemented-yet
        throw new Error("not implemented");
    }

    @POST({
        "path": "/"
    })
    @It("should return {{"{{status}}"}} if submit no JWT", Symbol("no jwt"))
    @It("should return {{"{{status}}"}} if submit empty JWT value in Authorization header", Symbol("invalid jwt #1"))
    @It("should return {{"{{status}}"}} if submit invalid JWT value in Authorization header", Symbol("invalid jwt #2"))
    @It("should return {{"{{status}}"}} if submit valid JWT with unknown client", Symbol("unknown client"))
    @It(
        "should return status code 201",
        Symbol("test #1")
    )
    public create(request: IHttpRequest, response: IHttpResponse) {
        // not-implemented-yet
        throw new Error("not implemented");
    }

    @PUT({
        "path": "/"
    })
    @It("should return {{"{{status}}"}} if submit no JWT", Symbol("no jwt"))
    @It("should return {{"{{status}}"}} if submit empty JWT value in Authorization header", Symbol("invalid jwt #1"))
    @It("should return {{"{{status}}"}} if submit invalid JWT value in Authorization header", Symbol("invalid jwt #2"))
    @It("should return {{"{{status}}"}} if submit valid JWT with unknown client", Symbol("unknown client"))
    @It(
        "should return status code 201",
        Symbol("test #1")
    )
    public update(request: IHttpRequest, response: IHttpResponse) {
        // not-implemented-yet
        throw new Error("not implemented");
    }

    @DELETE({
        "path": "/"
    })
    @It("should return {{"{{status}}"}} if submit no JWT", Symbol("no jwt"))
    @It("should return {{"{{status}}"}} if submit empty JWT value in Authorization header", Symbol("invalid jwt #1"))
    @It("should return {{"{{status}}"}} if submit invalid JWT value in Authorization header", Symbol("invalid jwt #2"))
    @It("should return {{"{{status}}"}} if submit valid JWT with unknown client", Symbol("unknown client"))
    @It(
        "should return status code 201",
        Symbol("test #1")
    )
    public remove(request: IHttpRequest, response: IHttpResponse) {
        // not-implemented-yet
        throw new Error("not implemented");
    }
}